from aiogram.enums import ParseMode
from loader import dp, bot
from aiogram import F, types
import sqlite3
from keyboards.defoult import towns_keyboard


@dp.message(F.text == "–ü—É–Ω–∫—Ç—ã —Å–±–æ—Ä–∞‚ôªÔ∏è")
async def iac(message: types.Message):  # Information about companies
    await message.answer("–ü—Ä–æ –∫–∞–∫–∏–µ –ø—É–Ω–∫—Ç—ã —Å–±–æ—Ä–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?", reply_markup=towns_keyboard)


@dp.message(F.text == "–ü—É–Ω–∫—Ç—ã —Å–±–æ—Ä–∞")  # 2-–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–∏–µ–ª—è
async def iac2(message: types.Message):
    await message.answer("–ü—Ä–æ –∫–∞–∫–∏–µ –ø—É–Ω–∫—Ç—ã —Å–±–æ—Ä–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?", reply_markup=towns_keyboard)


@dp.message(F.text == "–•–ê–ù–¢–´-–ú–ê–ù–°–ò–ô–°–öüåÅ")
async def xma(message: types.Message):
    con = sqlite3.connect("data/database/information_about_companies.db")
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
    cur = con.cursor()
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    result = cur.execute("""SELECT address, time_work, dinner, TechBreak, number_phone FROM info WHERE name_city = ?""",
                         ('–•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫',))
    count_table_2 = ""
    count_table_3 = ""
    count_table_4 = ""
    count_table_5 = ""
    count_table_6 = ""
    for row in result:
        count_table_2 = row[0]
        count_table_3 = row[1]
        count_table_4 = row[2]
        count_table_5 = row[3]
        count_table_6 = row[4]
    con.commit()
    con.close()

    await bot.send_location(message.from_user.id, 61.003895, 69.051789)
    await message.answer(f"<ins>–ê–¥—Ä–µ—Å—Å:</ins> –≥. –•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫, {count_table_2}\n"
                         f"<ins>–ï–∂–µ–¥–Ω–µ–≤–Ω–æ:</ins> {count_table_3}\n"
                         f"<ins>–û–±–µ–¥:</ins> {count_table_4}\n"
                         f"<ins>–¢–µ—Ö. –ø–µ—Ä–µ—Ä—ã–≤—ã:</ins> {count_table_5}\n"
                         f"<ins>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</ins> {count_table_6}\n\n"
                         f"<ins><b>–ü–µ—Ä–µ—á–µ–Ω—å –ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–≥–æ –≤—Ç–æ—Ä—Å—ã—Ä—å—è:</b></ins>\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è, —Ü–≤–µ—Ç–Ω–∞—è\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –±–µ–ª–∞—è (–º–∞—Ç–æ–≤–∞—è)\n"
                         f"‚úÖ–ü–ù–î-—É–ø–∞–∫–æ–≤–∫–∞ –æ—Ç –±—ã—Ç–æ–≤–æ–π—Ö–∏–º–∏–∏\n"
                         f"‚úÖ–ü–ù–î-–∫–∞–Ω–∏—Å—Ç—Ä–∞–ü–ù–î-—è—â–∏–∫\n"
                         f"‚úÖ–°—Ç—Ä–µ—Ç—á-–ø–ª–µ–Ω–∫–∞ –ü–í–î\n"
                         f"‚úÖ–ü–ª–µ–Ω–∫–∞ –ü–í–î ¬´–ø—É–∑—ã—Ä—á–∞—Ç–∞—è¬ª\n"
                         f"‚úÖ–ü–∞–∫–µ—Ç—ã —Ñ–∞—Å–æ–≤–æ—á–Ω—ã–µ(–ü–ù–î/–ü–í–î)\n"
                         f"‚úÖ–ú–∞–∫—É–ª–∞—Ç—É—Ä–∞ (–∫–∞—Ä—Ç–æ–Ω, –±—É–º–∞–≥–∞, –∫–Ω–∏–≥–∏, —Ç–µ—Ç—Ä–∞–¥–∏)\n"
                         f"‚úÖ–°—Ç–µ–∫–ª–æ (–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ, –∫–æ—Ä–∏—á–Ω–µ–≤–æ–µ –∏ –∑–µ–ª–µ–Ω–æ–µ - –±—É—Ç—ã–ª–∫–∏ –∏ –±–∞–Ω–∫–∏)\n"
                         f"‚úÖ–ê–ª—é–º–∏–Ω–∏–µ–≤—ã–µ –±–∞–Ω–∫–∏\n"
                         f"‚úÖ–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–π–∫–∏\n"
                         f"‚úÖ–ü–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –∫—Ä—ã—à–µ—á–∫–∏\n"
                         f"‚úÖ–ñ–µ—Å—Ç—è–Ω–∞—è –±–∞–Ω–∫–∞, –∂–µ—Å—Ç—è–Ω–∞—è –∫—Ä—ã—à–∫–∞\n"
                         f"‚úÖ–ë—ã—Ç–æ–≤–∞—è –∏ –æ—Ñ–∏—Å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞, —É—Ç—Ä–∞—Ç–∏–≤—à–∞—è –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞",
                         parse_mode=ParseMode.HTML, reply_markup=towns_keyboard
                         )


@dp.message(F.text == "–•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫")  # 2-–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–∏–µ–ª—è
async def xma1(message: types.Message):
    con = sqlite3.connect("data/database/information_about_companies.db")
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
    cur = con.cursor()
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    result = cur.execute("""SELECT address, time_work, dinner, TechBreak, number_phone FROM info WHERE name_city = ?""",
                         ('–•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫',))
    count_table_2 = ""
    count_table_3 = ""
    count_table_4 = ""
    count_table_5 = ""
    count_table_6 = ""
    for row in result:
        count_table_2 = row[0]
        count_table_3 = row[1]
        count_table_4 = row[2]
        count_table_5 = row[3]
        count_table_6 = row[4]
    con.commit()
    con.close()

    await bot.send_location(message.from_user.id, 61.003895, 69.051789)
    await message.answer(f"<ins>–ê–¥—Ä–µ—Å—Å:</ins> –≥. –•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫, {count_table_2}\n"
                         f"<ins>–ï–∂–µ–¥–Ω–µ–≤–Ω–æ:</ins> {count_table_3}\n"
                         f"<ins>–û–±–µ–¥:</ins> {count_table_4}\n"
                         f"<ins>–¢–µ—Ö. –ø–µ—Ä–µ—Ä—ã–≤—ã:</ins> {count_table_5}\n"
                         f"<ins>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</ins> {count_table_6}\n\n"
                         f"<ins><b>-–ü–µ—Ä–µ—á–µ–Ω—å –ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–≥–æ –≤—Ç–æ—Ä—Å—ã—Ä—å—è:</b></ins>\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è, —Ü–≤–µ—Ç–Ω–∞—è\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –±–µ–ª–∞—è (–º–∞—Ç–æ–≤–∞—è)\n"
                         f"‚úÖ–ü–ù–î-—É–ø–∞–∫–æ–≤–∫–∞ –æ—Ç –±—ã—Ç–æ–≤–æ–π—Ö–∏–º–∏–∏\n"
                         f"‚úÖ–ü–ù–î-–∫–∞–Ω–∏—Å—Ç—Ä–∞–ü–ù–î-—è—â–∏–∫\n"
                         f"‚úÖ–°—Ç—Ä–µ—Ç—á-–ø–ª–µ–Ω–∫–∞ –ü–í–î\n"
                         f"‚úÖ–ü–ª–µ–Ω–∫–∞ –ü–í–î ¬´–ø—É–∑—ã—Ä—á–∞—Ç–∞—è¬ª\n"
                         f"‚úÖ–ü–∞–∫–µ—Ç—ã —Ñ–∞—Å–æ–≤–æ—á–Ω—ã–µ(–ü–ù–î/–ü–í–î)\n"
                         f"‚úÖ–ú–∞–∫—É–ª–∞—Ç—É—Ä–∞ (–∫–∞—Ä—Ç–æ–Ω, –±—É–º–∞–≥–∞, –∫–Ω–∏–≥–∏, —Ç–µ—Ç—Ä–∞–¥–∏)\n"
                         f"‚úÖ–°—Ç–µ–∫–ª–æ (–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ, –∫–æ—Ä–∏—á–Ω–µ–≤–æ–µ –∏ –∑–µ–ª–µ–Ω–æ–µ - –±—É—Ç—ã–ª–∫–∏ –∏ –±–∞–Ω–∫–∏)\n"
                         f"‚úÖ–ê–ª—é–º–∏–Ω–∏–µ–≤—ã–µ –±–∞–Ω–∫–∏\n"
                         f"‚úÖ–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–π–∫–∏\n"
                         f"‚úÖ–ü–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –∫—Ä—ã—à–µ—á–∫–∏\n"
                         f"‚úÖ–ñ–µ—Å—Ç—è–Ω–∞—è –±–∞–Ω–∫–∞, –∂–µ—Å—Ç—è–Ω–∞—è –∫—Ä—ã—à–∫–∞\n"
                         f"‚úÖ–ë—ã—Ç–æ–≤–∞—è –∏ –æ—Ñ–∏—Å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞, —É—Ç—Ä–∞—Ç–∏–≤—à–∞—è –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞",
                         parse_mode=ParseMode.HTML, reply_markup=towns_keyboard
                         )


@dp.message(F.text == "–°–£–†–ì–£–¢üåÅ")
async def surg(message: types.Message):
    con = sqlite3.connect("data/database/information_about_companies.db")
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
    cur = con.cursor()
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    result = cur.execute("""SELECT address, time_work, dinner, TechBreak, number_phone FROM info WHERE name_city = ?""", ('–°—É—Ä–≥—É—Ç',))
    count_table_2 = ""
    count_table_3 = ""
    count_table_4 = ""
    count_table_5 = ""
    count_table_6 = ""
    for row in result:
        count_table_2 = row[0]
        count_table_3 = row[1]
        count_table_4 = row[2]
        count_table_5 = row[3]
        count_table_6 = row[4]
    con.commit()
    con.close()

    await bot.send_location(message.from_user.id, 61.257621474483486, 73.45676568947817)
    await message.answer(f"<ins>–ê–¥—Ä–µ—Å—Å:</ins> –≥. –°—É—Ä–≥—É—Ç, {count_table_2}\n"
                         f"<ins>–ï–∂–µ–¥–Ω–µ–≤–Ω–æ:</ins> {count_table_3}\n"
                         f"<ins>–û–±–µ–¥:</ins> {count_table_4}\n"
                         f"<ins>–¢–µ—Ö. –ø–µ—Ä–µ—Ä—ã–≤—ã:</ins> {count_table_5}\n"
                         f"<ins>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</ins> {count_table_6}\n\n"
                         f"<ins><b>-–ü–µ—Ä–µ—á–µ–Ω—å –ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–≥–æ –≤—Ç–æ—Ä—Å—ã—Ä—å—è:</b></ins>\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è, —Ü–≤–µ—Ç–Ω–∞—è\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –±–µ–ª–∞—è (–º–∞—Ç–æ–≤–∞—è)\n"
                         f"‚úÖ–ü–ù–î-—É–ø–∞–∫–æ–≤–∫–∞ –æ—Ç –±—ã—Ç–æ–≤–æ–π—Ö–∏–º–∏–∏\n"
                         f"‚úÖ–ü–ù–î-–∫–∞–Ω–∏—Å—Ç—Ä–∞–ü–ù–î-—è—â–∏–∫\n"
                         f"‚úÖ–°—Ç—Ä–µ—Ç—á-–ø–ª–µ–Ω–∫–∞ –ü–í–î\n"
                         f"‚úÖ–ü–ª–µ–Ω–∫–∞ –ü–í–î ¬´–ø—É–∑—ã—Ä—á–∞—Ç–∞—è¬ª\n"
                         f"‚úÖ–ü–∞–∫–µ—Ç—ã —Ñ–∞—Å–æ–≤–æ—á–Ω—ã–µ(–ü–ù–î/–ü–í–î)\n"
                         f"‚úÖ–ú–∞–∫—É–ª–∞—Ç—É—Ä–∞ (–∫–∞—Ä—Ç–æ–Ω, –±—É–º–∞–≥–∞, –∫–Ω–∏–≥–∏, —Ç–µ—Ç—Ä–∞–¥–∏)\n"
                         f"‚úÖ–°—Ç–µ–∫–ª–æ (–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ, –∫–æ—Ä–∏—á–Ω–µ–≤–æ–µ –∏ –∑–µ–ª–µ–Ω–æ–µ - –±—É—Ç—ã–ª–∫–∏ –∏ –±–∞–Ω–∫–∏)\n"
                         f"‚úÖ–ê–ª—é–º–∏–Ω–∏–µ–≤—ã–µ –±–∞–Ω–∫–∏\n"
                         f"‚úÖ–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–π–∫–∏\n"
                         f"‚úÖ–ü–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –∫—Ä—ã—à–µ—á–∫–∏",
                         parse_mode=ParseMode.HTML, reply_markup=towns_keyboard
                         )


@dp.message(F.text == "–°—É—Ä–≥—É—Ç")  # 2-–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–∏–µ–ª—è
async def surg1(message: types.Message):
    con = sqlite3.connect("data/database/information_about_companies.db")
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
    cur = con.cursor()
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    result = cur.execute("""SELECT address, time_work, dinner, TechBreak, number_phone FROM info WHERE name_city = ?""", ('–°—É—Ä–≥—É—Ç', ))
    count_table_2 = ""
    count_table_3 = ""
    count_table_4 = ""
    count_table_5 = ""
    count_table_6 = ""
    for row in result:
        count_table_2 = row[0]
        count_table_3 = row[1]
        count_table_4 = row[2]
        count_table_5 = row[3]
        count_table_6 = row[4]
    con.commit()
    con.close()

    await bot.send_location(message.from_user.id, 61.257621474483486, 73.45676568947817)
    await message.answer(f"<ins>–ê–¥—Ä–µ—Å—Å:</ins> –≥. –°—É—Ä–≥—É—Ç, {count_table_2}\n"
                         f"<ins>–ï–∂–µ–¥–Ω–µ–≤–Ω–æ:</ins> {count_table_3}\n"
                         f"<ins>–û–±–µ–¥:</ins> {count_table_4}\n"
                         f"<ins>–¢–µ—Ö. –ø–µ—Ä–µ—Ä—ã–≤—ã:</ins> {count_table_5}\n"
                         f"<ins>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</ins> {count_table_6}\n\n"
                         f"<ins><b>-–ü–µ—Ä–µ—á–µ–Ω—å –ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–≥–æ –≤—Ç–æ—Ä—Å—ã—Ä—å—è:</b></ins>\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è, —Ü–≤–µ—Ç–Ω–∞—è\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –±–µ–ª–∞—è (–º–∞—Ç–æ–≤–∞—è)\n"
                         f"‚úÖ–ü–ù–î-—É–ø–∞–∫–æ–≤–∫–∞ –æ—Ç –±—ã—Ç–æ–≤–æ–π—Ö–∏–º–∏–∏\n"
                         f"‚úÖ–ü–ù–î-–∫–∞–Ω–∏—Å—Ç—Ä–∞–ü–ù–î-—è—â–∏–∫\n"
                         f"‚úÖ–°—Ç—Ä–µ—Ç—á-–ø–ª–µ–Ω–∫–∞ –ü–í–î\n"
                         f"‚úÖ–ü–ª–µ–Ω–∫–∞ –ü–í–î ¬´–ø—É–∑—ã—Ä—á–∞—Ç–∞—è¬ª\n"
                         f"‚úÖ–ü–∞–∫–µ—Ç—ã —Ñ–∞—Å–æ–≤–æ—á–Ω—ã–µ(–ü–ù–î/–ü–í–î)\n"
                         f"‚úÖ–ú–∞–∫—É–ª–∞—Ç—É—Ä–∞ (–∫–∞—Ä—Ç–æ–Ω, –±—É–º–∞–≥–∞, –∫–Ω–∏–≥–∏, —Ç–µ—Ç—Ä–∞–¥–∏)\n"
                         f"‚úÖ–°—Ç–µ–∫–ª–æ (–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ, –∫–æ—Ä–∏—á–Ω–µ–≤–æ–µ –∏ –∑–µ–ª–µ–Ω–æ–µ - –±—É—Ç—ã–ª–∫–∏ –∏ –±–∞–Ω–∫–∏)\n"
                         f"‚úÖ–ê–ª—é–º–∏–Ω–∏–µ–≤—ã–µ –±–∞–Ω–∫–∏\n"
                         f"‚úÖ–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–π–∫–∏\n"
                         f"‚úÖ–ü–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –∫—Ä—ã—à–µ—á–∫–∏",
                         parse_mode=ParseMode.HTML, reply_markup=towns_keyboard
                         )


@dp.message(F.text == "–ù–ò–ñ–ù–ï–í–ê–†–¢–û–í–°–öüåÅ")
async def vart(message: types.Message):
    con = sqlite3.connect("data/database/information_about_companies.db")
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
    cur = con.cursor()
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    result = cur.execute("""SELECT address, time_work, dinner, TechBreak, number_phone FROM info WHERE name_city = ?""",
                         ('–ù–∏–∂–Ω–µ–≤–∞—Ä—Ç–æ–≤—Å–∫',))
    count_table_2 = ""
    count_table_3 = ""
    count_table_4 = ""
    count_table_5 = ""
    count_table_6 = ""
    for row in result:
        count_table_2 = row[0]
        count_table_3 = row[1]
        count_table_4 = row[2]
        count_table_5 = row[3]
        count_table_6 = row[4]
    con.commit()
    con.close()

    await bot.send_location(message.from_user.id, 60.945131, 76.574973)
    await message.answer(f"<ins>–ê–¥—Ä–µ—Å—Å:</ins> –≥. –ù–∏–∂–Ω–µ–≤–∞—Ä—Ç–æ–≤—Å–∫, {count_table_2}\n"
                         f"<ins>–ï–∂–µ–¥–Ω–µ–≤–Ω–æ:</ins> {count_table_3}\n"
                         f"<ins>–û–±–µ–¥:</ins> {count_table_4}\n"
                         f"<ins>–¢–µ—Ö. –ø–µ—Ä–µ—Ä—ã–≤—ã:</ins> {count_table_5}\n"
                         f"<ins>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</ins> {count_table_6}\n\n"
                         f"-<ins><b>–ü–µ—Ä–µ—á–µ–Ω—å –ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–≥–æ –≤—Ç–æ—Ä—Å—ã—Ä—å—è:</b></ins>\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è, —Ü–≤–µ—Ç–Ω–∞—è\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –±–µ–ª–∞—è (–º–∞—Ç–æ–≤–∞—è)\n"
                         f"‚úÖ–ü–ù–î-—É–ø–∞–∫–æ–≤–∫–∞ –æ—Ç –±—ã—Ç–æ–≤–æ–π—Ö–∏–º–∏–∏\n"
                         f"‚úÖ–ü–ù–î-–∫–∞–Ω–∏—Å—Ç—Ä–∞–ü–ù–î-—è—â–∏–∫\n"
                         f"‚úÖ–°—Ç—Ä–µ—Ç—á-–ø–ª–µ–Ω–∫–∞ –ü–í–î\n"
                         f"‚úÖ–ü–ª–µ–Ω–∫–∞ –ü–í–î ¬´–ø—É–∑—ã—Ä—á–∞—Ç–∞—è¬ª\n"
                         f"‚úÖ–ü–∞–∫–µ—Ç—ã —Ñ–∞—Å–æ–≤–æ—á–Ω—ã–µ (–ü–ù–î/–ü–í–î)\n"
                         f"‚úÖ–ú–∞–∫—É–ª–∞—Ç—É—Ä–∞ (–∫–∞—Ä—Ç–æ–Ω, –±—É–º–∞–≥–∞, –∫–Ω–∏–≥–∏, —Ç–µ—Ç—Ä–∞–¥–∏)\n"
                         f"‚úÖ–°—Ç–µ–∫–ª–æ (–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ, –∫–æ—Ä–∏—á–Ω–µ–≤–æ–µ –∏ –∑–µ–ª–µ–Ω–æ–µ - –±—É—Ç—ã–ª–∫–∏ –∏ –±–∞–Ω–∫–∏)\n"
                         f"‚úÖ–ê–ª—é–º–∏–Ω–∏–µ–≤—ã–µ –±–∞–Ω–∫–∏\n"
                         f"‚úÖ–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–π–∫–∏\n"
                         f"‚úÖ–ü–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –∫—Ä—ã—à–µ—á–∫–∏",
                         parse_mode=ParseMode.HTML, reply_markup=towns_keyboard
                         )


@dp.message(F.text == "–ù–∏–∂–Ω–µ–≤–∞—Ä—Ç–æ–≤—Å–∫")  # 2-–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–∏–µ–ª—è
async def vart1(message: types.Message):
    con = sqlite3.connect("data/database/information_about_companies.db")
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
    cur = con.cursor()
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    result = cur.execute("""SELECT address, time_work, dinner, TechBreak, number_phone FROM info WHERE name_city = ?""", ('–ù–∏–∂–Ω–µ–≤–∞—Ä—Ç–æ–≤—Å–∫', ))
    count_table_2 = ""
    count_table_3 = ""
    count_table_4 = ""
    count_table_5 = ""
    count_table_6 = ""
    for row in result:
        count_table_2 = row[0]
        count_table_3 = row[1]
        count_table_4 = row[2]
        count_table_5 = row[3]
        count_table_6 = row[4]
    con.commit()
    con.close()

    await bot.send_location(message.from_user.id, 60.945131, 76.574973)
    await message.answer(f"<ins>–ê–¥—Ä–µ—Å—Å:</ins> –≥. –ù–∏–∂–Ω–µ–≤–∞—Ä—Ç–æ–≤—Å–∫, {count_table_2}\n"
                         f"<ins>–ï–∂–µ–¥–Ω–µ–≤–Ω–æ:</ins> {count_table_3}\n"
                         f"<ins>–û–±–µ–¥:</ins> {count_table_4}\n"
                         f"<ins>–¢–µ—Ö. –ø–µ—Ä–µ—Ä—ã–≤—ã:</ins> {count_table_5}\n"
                         f"<ins>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</ins> {count_table_6}\n\n"
                         f"-<ins><b>–ü–µ—Ä–µ—á–µ–Ω—å –ø—Ä–∏–Ω–∏–º–∞–µ–º–æ–≥–æ –≤—Ç–æ—Ä—Å—ã—Ä—å—è:</b></ins>\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è, —Ü–≤–µ—Ç–Ω–∞—è\n"
                         f"‚úÖ–ü–≠–¢-–±—É—Ç—ã–ª–∫–∞ –±–µ–ª–∞—è (–º–∞—Ç–æ–≤–∞—è)\n"
                         f"‚úÖ–ü–ù–î-—É–ø–∞–∫–æ–≤–∫–∞ –æ—Ç –±—ã—Ç–æ–≤–æ–π—Ö–∏–º–∏–∏\n"
                         f"‚úÖ–ü–ù–î-–∫–∞–Ω–∏—Å—Ç—Ä–∞–ü–ù–î-—è—â–∏–∫\n"
                         f"‚úÖ–°—Ç—Ä–µ—Ç—á-–ø–ª–µ–Ω–∫–∞ –ü–í–î\n"
                         f"‚úÖ–ü–ª–µ–Ω–∫–∞ –ü–í–î ¬´–ø—É–∑—ã—Ä—á–∞—Ç–∞—è¬ª\n"
                         f"‚úÖ–ü–∞–∫–µ—Ç—ã —Ñ–∞—Å–æ–≤–æ—á–Ω—ã–µ (–ü–ù–î/–ü–í–î)\n"
                         f"‚úÖ–ú–∞–∫—É–ª–∞—Ç—É—Ä–∞ (–∫–∞—Ä—Ç–æ–Ω, –±—É–º–∞–≥–∞, –∫–Ω–∏–≥–∏, —Ç–µ—Ç—Ä–∞–¥–∏)\n"
                         f"‚úÖ–°—Ç–µ–∫–ª–æ (–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ, –∫–æ—Ä–∏—á–Ω–µ–≤–æ–µ –∏ –∑–µ–ª–µ–Ω–æ–µ - –±—É—Ç—ã–ª–∫–∏ –∏ –±–∞–Ω–∫–∏)\n"
                         f"‚úÖ–ê–ª—é–º–∏–Ω–∏–µ–≤—ã–µ –±–∞–Ω–∫–∏\n"
                         f"‚úÖ–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–π–∫–∏\n"
                         f"‚úÖ–ü–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ –∫—Ä—ã—à–µ—á–∫–∏",
                         parse_mode=ParseMode.HTML, reply_markup=towns_keyboard
                         )