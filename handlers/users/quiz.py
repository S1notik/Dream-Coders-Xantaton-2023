from aiogram import types, F
from aiogram.filters import CommandStart
from keyboards.inline import question1_keyboard, question2_keyboard
from loader import dp
from keyboards.defoult.reply_buttons import education_keyboard


@dp.message(F.text == "–¢–µ—Å—ÇüèÜ")
async def start_test_question1(message: types.Message):
    await message.answer("–û —á–µ–º –≥–æ–≤–æ—Ä–∏—Ç —ç—Ç–æ—Ç –∑–Ω–∞—á–æ–∫ ‚ôªÔ∏è? –ï–≥–æ —á–∞—Å—Ç–æ —Ä–∞–∑–º–µ—â–∞—é—Ç –Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤.",
                         reply_markup=question1_keyboard)

@dp.callback_query(F.data == "answer1_question2_quiz")
async def question2(message: types.Message):
    await message.answer("–í–µ—Ä–Ω–æ!\n\n"
                         "–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                         "–ú–æ–∂–Ω–æ –ª–∏ –∫–ª–∞—Å—Ç—å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Å—Ç–∞–∫–∞–Ω—á–∏–∫ –∏–∑-–ø–æ–¥ –∫–æ—Ñ–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –±—É–º–∞–≥–∏?",
                         reply_markup=question2_keyboard)

@dp.callback_query(F.data == "answer2_question2_quiz")
async def question2(message: types.Message):
    await message.answer("–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                         "–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                         "–ú–æ–∂–Ω–æ –ª–∏ –∫–ª–∞—Å—Ç—å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Å—Ç–∞–∫–∞–Ω—á–∏–∫ –∏–∑-–ø–æ–¥ –∫–æ—Ñ–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –±—É–º–∞–≥–∏?",
                         reply_markup=question2_keyboard)

@dp.callback_query(F.data == "answer3_question2_quiz")
async def question2(message: types.Message):
    await message.answer("–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                         "–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                         "–ú–æ–∂–Ω–æ –ª–∏ –∫–ª–∞—Å—Ç—å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Å—Ç–∞–∫–∞–Ω—á–∏–∫ –∏–∑-–ø–æ–¥ –∫–æ—Ñ–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –±—É–º–∞–≥–∏?",
                         reply_markup=question2_keyboard)
