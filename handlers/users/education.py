from aiogram import types, F
from aiogram.enums import ParseMode
from aiogram.types import FSInputFile
from keyboards.inline import *
from loader import dp
from keyboards.defoult.reply_buttons import education_keyboard
from keyboards.inline import question1_keyboard, question2_keyboard
import time
import sqlite3


con = sqlite3.connect("data/database/information_about_companies.db")
cur = con.cursor()
id = count = 0
main_flag = False


@dp.message(F.text == "–û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ãüìö")
async def education(message: types.Message):
    await message.answer("<b>–í—ã –æ–∫—É–Ω—É–ª–∏—Å—å –≤ –º–∏—Ä –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</b>üìö",
                         reply_markup=education_keyboard, parse_mode=ParseMode.HTML)


# Useful links and video lessons
@dp.message(F.text == "–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏üîó")
async def education(message: types.Message):
    await message.answer("–ù–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏ –∏ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏:",
                         reply_markup=useful_links_inline_keyboard)


# –°—Å—ã–ª–∫–∞ –Ω–∞ —ç–∫–æ—É—Ä–æ–∫ –∏ –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ
@dp.message(F.text == "–≠–∫–æ—É—Ä–æ–∫üè´")
async def education(message: types.Message):
    await message.answer_photo(FSInputFile("data/image/logo_to_aco_lessons.jpg"))
    await message.answer("–≠–∫–æ—Ü–µ–Ω—Ç—Ä ¬´–Æ–≥—Ä–∞ –°–æ–±–∏—Ä–∞–µ—Ç¬ª –Ω–µ —Ç–æ–ª—å–∫–æ –ø—É–Ω–∫—Ç –ø—Ä–∏–µ–º–∞ –≤—Ç–æ—Ä—Å—ã—Ä—å—è - —ç—Ç–æ –µ—â–µ –∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ—Ö–æ–¥—è—Ç –ª–µ–∫—Ü–∏–∏.\n\n")

    time.sleep(1)

    await message.answer(
            "–ù–∞ –≠–∫–æ—É—Ä–æ–∫–µ –±—É–¥–µ—Ç –Ω–∞–≥–ª—è–¥–Ω–æ –ø–æ–∫–∞–∑–∞–Ω–æ <b>–∫–∞–∫–∏–µ –≤–∏–¥—ã –æ—Ç—Ö–æ–¥–æ–≤ –ø–µ—Ä–µ—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è</b> –∏–ª–∏ –Ω–µ—Ç, –∫–∞–∫–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –µ—Å—Ç—å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–º –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–º –≤–µ—â–∞–º –∏ —á—Ç–æ –∏–∑–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∏–∑ –≤—Ç–æ—Ä–∏—á–Ω–æ–≥–æ —Å—ã—Ä—å—è."
            " –ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ —ç–∫–æ—É—Ä–æ–∫–æ–≤ —É–∑–Ω–∞—é—Ç –æ <ins>—Ä–∞–∑–¥–µ–ª—å–Ω–æ–º —Å–±–æ—Ä–µ –æ—Ç—Ö–æ–¥–æ–≤ –∏ –¥–∞–ª—å–Ω–µ–π—à–µ–º –ø—É—Ç–∏ –≤—Ç–æ—Ä–∏—á–Ω–æ–≥–æ —Å—ã—Ä—å—è</ins> –∏–∑ –ø–µ—Ä–≤—ã—Ö —Ä—É–∫.",
        reply_markup=ecolesson_inline_keyboard, parse_mode=ParseMode.HTML)


# –¢–µ—Å—Ç –Ω–∞ 10 –≤–æ–ø—Ä–æ—Å–æ–≤ ---------------------------------------------------------------------------------------------

@dp.message(F.text == "–¢–µ—Å—ÇüèÜ")
async def start_test_question1(message: types.Message):
    await message.answer("‚ùî–û —á–µ–º –≥–æ–≤–æ—Ä–∏—Ç —ç—Ç–æ—Ç –∑–Ω–∞—á–æ–∫ ‚ôªÔ∏è? –ï–≥–æ —á–∞—Å—Ç–æ —Ä–∞–∑–º–µ—â–∞—é—Ç –Ω–∞ —É–ø–∞–∫–æ–≤–∫–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤.",
                         reply_markup=question1_keyboard)
    global count, id, cur, main_flag
    main_flag = False
    cur = con.cursor()
    id = message.from_user.id
    count = 0


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å ------------------------------------

@dp.callback_query(F.data == "answer1_question1_quiz")
async def question1(callback: types.CallbackQuery):
    global id, count, cur, con, count
    result = cur.execute("""SELECT q1 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        count += 1
        await callback.message.answer("‚úÖ–í–µ—Ä–Ω–æ!\n\n")
        cur.execute(f"""UPDATE users SET q1={True} WHERE id = ?""", (id,))
        con.commit()
        con.close()
        await score_for_questions(id)
        con = sqlite3.connect("data/database/information_about_companies.db")
        cur = con.cursor()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ú–æ–∂–Ω–æ –ª–∏ –∫–ª–∞—Å—Ç—å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Å—Ç–∞–∫–∞–Ω—á–∏–∫ –∏–∑-–ø–æ–¥ –∫–æ—Ñ–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –±—É–º–∞–≥–∏?",
                                  reply_markup=question2_keyboard)


@dp.callback_query(F.data == "answer2_question1_quiz")
async def question1(callback: types.CallbackQuery):
    global cur, con
    result = cur.execute("""SELECT q1 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                  "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ú–∞—Ç–µ—Ä–∏–∞–ª —É–ø–∞–∫–æ–≤–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω –∏–ª–∏ —É–ø–∞–∫–æ–≤–∫–∞ —á–∞—Å—Ç–∏—á–Ω–æ/–ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–¥–µ–ª–∞–Ω–∞ –∏–∑ –≤—Ç–æ—Ä—Å—ã—Ä—å—è")
        cur.execute(f"""UPDATE users SET q1={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ú–∞—Ç–µ—Ä–∏–∞–ª —É–ø–∞–∫–æ–≤–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω –∏–ª–∏ —É–ø–∞–∫–æ–≤–∫–∞ —á–∞—Å—Ç–∏—á–Ω–æ/–ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–¥–µ–ª–∞–Ω–∞ –∏–∑ –≤—Ç–æ—Ä—Å—ã—Ä—å—è")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                "–ú–æ–∂–Ω–æ –ª–∏ –∫–ª–∞—Å—Ç—å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Å—Ç–∞–∫–∞–Ω—á–∏–∫ –∏–∑-–ø–æ–¥ –∫–æ—Ñ–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –±—É–º–∞–≥–∏?",
                         reply_markup=question2_keyboard)


@dp.callback_query(F.data == "answer3_question1_quiz")
async def question1(callback: types.CallbackQuery):
    global cur, con
    result = cur.execute("""SELECT q1 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ú–∞—Ç–µ—Ä–∏–∞–ª —É–ø–∞–∫–æ–≤–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω –∏–ª–∏ —É–ø–∞–∫–æ–≤–∫–∞ —á–∞—Å—Ç–∏—á–Ω–æ/–ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–¥–µ–ª–∞–Ω–∞ –∏–∑ –≤—Ç–æ—Ä—Å—ã—Ä—å—è")
        cur.execute(f"""UPDATE users SET q1={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ú–∞—Ç–µ—Ä–∏–∞–ª —É–ø–∞–∫–æ–≤–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω –∏–ª–∏ —É–ø–∞–∫–æ–≤–∫–∞ —á–∞—Å—Ç–∏—á–Ω–æ/–ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–¥–µ–ª–∞–Ω–∞ –∏–∑ –≤—Ç–æ—Ä—Å—ã—Ä—å—è")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                 "–ú–æ–∂–Ω–æ –ª–∏ –∫–ª–∞—Å—Ç—å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Å—Ç–∞–∫–∞–Ω—á–∏–∫ –∏–∑-–ø–æ–¥ –∫–æ—Ñ–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –±—É–º–∞–≥–∏?",
                         reply_markup=question2_keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å ------------------------------------

@dp.callback_query(F.data == "answer1_question2_quiz")
async def question2(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q2 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ù–µ—Ç, –Ω–µ–ª—å–∑—è")
        cur.execute(f"""UPDATE users SET q2={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ù–µ—Ç, –Ω–µ–ª—å–∑—è")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –∏–∑ –∂–∏–ª—å—Ü–æ–≤ –Ω–µ –ø–ª–∞—Ç–∏—Ç –∑–∞ –º—É—Å–æ—Ä, —Ç–æ...",
                                  reply_markup=question3_keyboard)


@dp.callback_query(F.data == "answer2_question2_quiz")
async def question2(callback: types.CallbackQuery):
    global id, count, cur, con, count
    result = cur.execute("""SELECT q2 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        count += 1
        await callback.message.answer("‚úÖ–í–µ—Ä–Ω–æ!\n\n")
        cur.execute(f"""UPDATE users SET q2={True} WHERE id = ?""", (id,))
        con.commit()
        con.close()
        await score_for_questions(id)
        con = sqlite3.connect("data/database/information_about_companies.db")
        cur = con.cursor()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –∏–∑ –∂–∏–ª—å—Ü–æ–≤ –Ω–µ –ø–ª–∞—Ç–∏—Ç –∑–∞ –º—É—Å–æ—Ä, —Ç–æ...",
                                  reply_markup=question3_keyboard)


@dp.callback_query(F.data == "answer3_question2_quiz")
async def question2(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q2 FROM users WHERE id = ?""", (id,)).fetchone()
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ù–µ—Ç, –Ω–µ–ª—å–∑—è")
        cur.execute(f"""UPDATE users SET q2={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ù–µ—Ç, –Ω–µ–ª—å–∑—è")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –∏–∑ –∂–∏–ª—å—Ü–æ–≤ –Ω–µ –ø–ª–∞—Ç–∏—Ç –∑–∞ –º—É—Å–æ—Ä, —Ç–æ...",
                                  reply_markup=question3_keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Ç—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å ------------------------------------

@dp.callback_query(F.data == "answer1_question3_quiz")
async def question3(callback: types.CallbackQuery):
    global id, count, cur, con, count
    result = cur.execute("""SELECT q3 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        count += 1
        await callback.message.answer("‚úÖ–í–µ—Ä–Ω–æ!\n\n")
        cur.execute(f"""UPDATE users SET q3={True} WHERE id = ?""", (id,))
        con.commit()
        con.close()
        await score_for_questions(id)
        con = sqlite3.connect("data/database/information_about_companies.db")
        cur = con.cursor()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö–∞–∫—É—é –ø–æ—Å—É–¥—É —Ç—ã –±–µ—Ä–µ—à—å –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ?",
                                  reply_markup=question4_keyboard)


@dp.callback_query(F.data == "answer2_question3_quiz")
async def question3(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q3 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –î–æ–ª–≥ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∑–∞ —Ç–µ–º, –∫—Ç–æ –¥–æ–ø—É—Å—Ç–∏–ª –ø—Ä–æ—Å—Ä–æ—á–∫—É –ø–ª–∞—Ç–µ–∂–∞")
        cur.execute(f"""UPDATE users SET q3={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –î–æ–ª–≥ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∑–∞ —Ç–µ–º, –∫—Ç–æ –¥–æ–ø—É—Å—Ç–∏–ª –ø—Ä–æ—Å—Ä–æ—á–∫—É –ø–ª–∞—Ç–µ–∂–∞")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö–∞–∫—É—é –ø–æ—Å—É–¥—É —Ç—ã –±–µ—Ä–µ—à—å –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ?",
                                  reply_markup=question4_keyboard)


@dp.callback_query(F.data == "answer3_question3_quiz")
async def question3(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q3 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –î–æ–ª–≥ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∑–∞ —Ç–µ–º, –∫—Ç–æ –¥–æ–ø—É—Å—Ç–∏–ª –ø—Ä–æ—Å—Ä–æ—á–∫—É –ø–ª–∞—Ç–µ–∂–∞")
        cur.execute(f"""UPDATE users SET q3={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –î–æ–ª–≥ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∑–∞ —Ç–µ–º, –∫—Ç–æ –¥–æ–ø—É—Å—Ç–∏–ª –ø—Ä–æ—Å—Ä–æ—á–∫—É –ø–ª–∞—Ç–µ–∂–∞")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö–∞–∫—É—é –ø–æ—Å—É–¥—É —Ç—ã –±–µ—Ä–µ—à—å –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ?",
                                  reply_markup=question4_keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —á–µ—Ç–≤–µ—Ä—Ç—ã–π –≤–æ–ø—Ä–æ—Å ------------------------------------

@dp.callback_query(F.data == "answer1_question4_quiz")
async def question4(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q4 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –û–±—ã—á–Ω–æ —è –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≥—É–ª–æ–∫ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ –Ω–µ –µ–º")
        cur.execute(f"""UPDATE users SET q4={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –û–±—ã—á–Ω–æ —è –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≥—É–ª–æ–∫ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ –Ω–µ –µ–º")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–¢—ã —Å–Ω–∏–º–∞–µ—à—å –∫–≤–∞—Ä—Ç–∏—Ä—É. –ö—Ç–æ –¥–æ–ª–∂–µ–Ω –ø–ª–∞—Ç–∏—Ç—å –∑–∞ –≤—ã–≤–æ–∑ –º—É—Å–æ—Ä–∞?",
                                  reply_markup=question5_keyboard)


@dp.callback_query(F.data == "answer2_question4_quiz")
async def question4(callback: types.CallbackQuery):
    global id, count, cur, con, count
    result = cur.execute("""SELECT q4 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        count += 1
        await callback.message.answer("‚úÖ–í–µ—Ä–Ω–æ!\n\n")
        cur.execute(f"""UPDATE users SET q4={True} WHERE id = ?""", (id,))
        con.commit()
        con.close()
        await score_for_questions(id)
        con = sqlite3.connect("data/database/information_about_companies.db")
        cur = con.cursor()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–¢—ã —Å–Ω–∏–º–∞–µ—à—å –∫–≤–∞—Ä—Ç–∏—Ä—É. –ö—Ç–æ –¥–æ–ª–∂–µ–Ω –ø–ª–∞—Ç–∏—Ç—å –∑–∞ –≤—ã–≤–æ–∑ –º—É—Å–æ—Ä–∞?",
                                  reply_markup=question5_keyboard)


@dp.callback_query(F.data == "answer3_question4_quiz")
async def question4(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q4 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –û–±—ã—á–Ω–æ —è –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≥—É–ª–æ–∫ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ –Ω–µ –µ–º")
        cur.execute(f"""UPDATE users SET q4={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –û–±—ã—á–Ω–æ —è –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≥—É–ª–æ–∫ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ –Ω–µ –µ–º")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–¢—ã —Å–Ω–∏–º–∞–µ—à—å –∫–≤–∞—Ä—Ç–∏—Ä—É. –ö—Ç–æ –¥–æ–ª–∂–µ–Ω –ø–ª–∞—Ç–∏—Ç—å –∑–∞ –≤—ã–≤–æ–∑ –º—É—Å–æ—Ä–∞?",
                                  reply_markup=question5_keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –ø—è—Ç—ã–π –≤–æ–ø—Ä–æ—Å ------------------------------------

@dp.callback_query(F.data == "answer1_question5_quiz")
async def question5(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q5 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–µ–π —Ö–æ–∑—è–∏–Ω–∞ –∏ –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞")
        cur.execute(f"""UPDATE users SET q5={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–µ–π —Ö–æ–∑—è–∏–Ω–∞ –∏ –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–°–∫–æ–ª—å–∫–æ –≤–æ–¥—ã —Ç—ã –≤—ã–ø–∏–≤–∞–µ—à—å –∑–∞ –¥–µ–Ω—å?",
                                  reply_markup=question6_keyboard)


@dp.callback_query(F.data == "answer2_question5_quiz")
async def question5(callback: types.CallbackQuery):
    global id, count, cur, con, count
    result = cur.execute("""SELECT q5 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        count += 1
        await callback.message.answer("‚úÖ–í–µ—Ä–Ω–æ!\n\n")
        cur.execute(f"""UPDATE users SET q5={True} WHERE id = ?""", (id,))
        con.commit()
        con.close()
        await score_for_questions(id)
        con = sqlite3.connect("data/database/information_about_companies.db")
        cur = con.cursor()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–°–∫–æ–ª—å–∫–æ –≤–æ–¥—ã —Ç—ã –≤—ã–ø–∏–≤–∞–µ—à—å –∑–∞ –¥–µ–Ω—å?",
                                  reply_markup=question6_keyboard)


@dp.callback_query(F.data == "answer3_question5_quiz")
async def question5(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q5 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–µ–π —Ö–æ–∑—è–∏–Ω–∞ –∏ –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞")
        cur.execute(f"""UPDATE users SET q5={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–æ–≥–æ–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–µ–π —Ö–æ–∑—è–∏–Ω–∞ –∏ –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–°–∫–æ–ª—å–∫–æ –≤–æ–¥—ã —Ç—ã –≤—ã–ø–∏–≤–∞–µ—à—å –∑–∞ –¥–µ–Ω—å?",
                                  reply_markup=question6_keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —à–µ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å ------------------------------------

@dp.callback_query(F.data == "answer1_question6_quiz")
async def question6(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q6 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –Ø –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ –±–µ—Ä—É —Å —Å–æ–±–æ–π —Ç–µ—Ä–º–æ—Å —Å –ø–∏—Ç—å–µ–≤–æ–π –≤–æ–¥–æ–π")
        cur.execute(f"""UPDATE users SET q6={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –Ø –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ –±–µ—Ä—É —Å —Å–æ–±–æ–π —Ç–µ—Ä–º–æ—Å —Å –ø–∏—Ç—å–µ–≤–æ–π –≤–æ–¥–æ–π")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö—É–¥–∞ —Å–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–∞?",
                                  reply_markup=question7_keyboard)


@dp.callback_query(F.data == "answer2_question6_quiz")
async def question6(callback: types.CallbackQuery):
    global id, count, cur, con, count
    result = cur.execute("""SELECT q6 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        count += 1
        await callback.message.answer("‚úÖ–í–µ—Ä–Ω–æ!\n\n")
        cur.execute(f"""UPDATE users SET q6={True} WHERE id = ?""", (id,))
        con.commit()
        con.close()
        await score_for_questions(id)
        con = sqlite3.connect("data/database/information_about_companies.db")
        cur = con.cursor()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö—É–¥–∞ —Å–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–∞?",
                                  reply_markup=question7_keyboard)


@dp.callback_query(F.data == "answer3_question6_quiz")
async def question6(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q6 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –Ø –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ –±–µ—Ä—É —Å —Å–æ–±–æ–π —Ç–µ—Ä–º–æ—Å —Å –ø–∏—Ç—å–µ–≤–æ–π –≤–æ–¥–æ–π")
        cur.execute(f"""UPDATE users SET q6={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –Ø –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ –±–µ—Ä—É —Å —Å–æ–±–æ–π —Ç–µ—Ä–º–æ—Å —Å –ø–∏—Ç—å–µ–≤–æ–π –≤–æ–¥–æ–π")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö—É–¥–∞ —Å–ª–µ–¥—É–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–µ—Ä–µ—Ä–∞—Å—á–µ—Ç–∞?",
                                  reply_markup=question7_keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Å–µ–¥—å–º–æ–π –≤–æ–ø—Ä–æ—Å ------------------------------------

@dp.callback_query(F.data == "answer1_question7_quiz")
async def question7(callback: types.CallbackQuery):
    global id, count, cur, con, count
    result = cur.execute("""SELECT q7 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        count += 1
        await callback.message.answer("‚úÖ–í–µ—Ä–Ω–æ!\n\n")
        cur.execute(f"""UPDATE users SET q7={True} WHERE id = ?""", (id,))
        con.commit()
        con.close()
        await score_for_questions(id)
        con = sqlite3.connect("data/database/information_about_companies.db")
        cur = con.cursor()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö–∞–∫–∏–µ –∏–∑ —ç—Ç–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –æ–ø–∞—Å–Ω–æ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –≤ –æ–±—ã—á–Ω–æ–µ –º—É—Å–æ—Ä–Ω–æ–µ –≤–µ–¥—Ä–æ?",
                                  reply_markup=question8_keyboard)


@dp.callback_query(F.data == "answer2_question7_quiz")
async def question7(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q7 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –í –æ—Ñ–∏—Å –∞–≥–µ–Ω—Ç–æ–≤ –ø–æ —Ä–∞—Å—á–µ—Ç–Ω–æ-–∫–∞—Å—Å–æ–≤–æ–º—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é")
        cur.execute(f"""UPDATE users SET q7={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –í –æ—Ñ–∏—Å –∞–≥–µ–Ω—Ç–æ–≤ –ø–æ —Ä–∞—Å—á–µ—Ç–Ω–æ-–∫–∞—Å—Å–æ–≤–æ–º—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö–∞–∫–∏–µ –∏–∑ —ç—Ç–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –æ–ø–∞—Å–Ω–æ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –≤ –æ–±—ã—á–Ω–æ–µ –º—É—Å–æ—Ä–Ω–æ–µ –≤–µ–¥—Ä–æ?",
                                  reply_markup=question8_keyboard)


@dp.callback_query(F.data == "answer3_question7_quiz")
async def question7(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q7 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –í –æ—Ñ–∏—Å –∞–≥–µ–Ω—Ç–æ–≤ –ø–æ —Ä–∞—Å—á–µ—Ç–Ω–æ-–∫–∞—Å—Å–æ–≤–æ–º—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é")
        cur.execute(f"""UPDATE users SET q7={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –í –æ—Ñ–∏—Å –∞–≥–µ–Ω—Ç–æ–≤ –ø–æ —Ä–∞—Å—á–µ—Ç–Ω–æ-–∫–∞—Å—Å–æ–≤–æ–º—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö–∞–∫–∏–µ –∏–∑ —ç—Ç–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –æ–ø–∞—Å–Ω–æ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –≤ –æ–±—ã—á–Ω–æ–µ –º—É—Å–æ—Ä–Ω–æ–µ –≤–µ–¥—Ä–æ?",
                                  reply_markup=question8_keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ—Å—å–º–æ–π –≤–æ–ø—Ä–æ—Å ------------------------------------

@dp.callback_query(F.data == "answer1_question8_quiz")
async def question8(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q8 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ë–∞—Ç–∞—Ä–µ–π–∫–∏")
        cur.execute(f"""UPDATE users SET q8={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ë–∞—Ç–∞—Ä–µ–π–∫–∏")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ß—Ç–æ –∏–∑ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ç—É—Ä–∏—Å—Ç–∞–º–∏ –≤ –ª–µ—Å—É –±—ã—Å—Ç—Ä–µ–µ —Ä–∞–∑–ª–æ–∂–∏—Ç—Å—è?",
                                  reply_markup=question9_keyboard)


@dp.callback_query(F.data == "answer2_question8_quiz")
async def question8(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q8 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ë–∞—Ç–∞—Ä–µ–π–∫–∏")
        cur.execute(f"""UPDATE users SET q8={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ë–∞—Ç–∞—Ä–µ–π–∫–∏")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ß—Ç–æ –∏–∑ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ç—É—Ä–∏—Å—Ç–∞–º–∏ –≤ –ª–µ—Å—É –±—ã—Å—Ç—Ä–µ–µ —Ä–∞–∑–ª–æ–∂–∏—Ç—Å—è?",
                                  reply_markup=question9_keyboard)


@dp.callback_query(F.data == "answer3_question8_quiz")
async def question8(callback: types.CallbackQuery):
    global id, count, cur, con, count
    result = cur.execute("""SELECT q8 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        count += 1
        await callback.message.answer("‚úÖ–í–µ—Ä–Ω–æ!\n\n")
        cur.execute(f"""UPDATE users SET q8={True} WHERE id = ?""", (id,))
        con.commit()
        con.close()
        await score_for_questions(id)
        con = sqlite3.connect("data/database/information_about_companies.db")
        cur = con.cursor()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ß—Ç–æ –∏–∑ –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ç—É—Ä–∏—Å—Ç–∞–º–∏ –≤ –ª–µ—Å—É –±—ã—Å—Ç—Ä–µ–µ —Ä–∞–∑–ª–æ–∂–∏—Ç—Å—è?",
                                  reply_markup=question9_keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –¥–µ–≤—è—Ç—ã–π –≤–æ–ø—Ä–æ—Å ------------------------------------

@dp.callback_query(F.data == "answer1_question9_quiz")
async def question9(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q9 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ñ–µ–ª–µ–∑–Ω–∞—è –∫–æ–Ω—Å–µ—Ä–≤–Ω–∞—è –±–∞–Ω–∫–∞")
        cur.execute(f"""UPDATE users SET q9={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ñ–µ–ª–µ–∑–Ω–∞—è –∫–æ–Ω—Å–µ—Ä–≤–Ω–∞—è –±–∞–Ω–∫–∞")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö–∞–∫–∞—è —É–ø–∞–∫–æ–≤–∫–∞ —è–∏—Ü –º–µ–Ω–µ–µ –≤—Ä–µ–¥–Ω–∞ –¥–ª—è —ç–∫–æ–ª–æ–≥–∏–∏?",
                                  reply_markup=question10_keyboard)


@dp.callback_query(F.data == "answer2_question9_quiz")
async def question9(callback: types.CallbackQuery):
    global cur
    result = cur.execute("""SELECT q9 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ñ–µ–ª–µ–∑–Ω–∞—è –∫–æ–Ω—Å–µ—Ä–≤–Ω–∞—è –±–∞–Ω–∫–∞")
        cur.execute(f"""UPDATE users SET q9={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ñ–µ–ª–µ–∑–Ω–∞—è –∫–æ–Ω—Å–µ—Ä–≤–Ω–∞—è –±–∞–Ω–∫–∞")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö–∞–∫–∞—è —É–ø–∞–∫–æ–≤–∫–∞ —è–∏—Ü –º–µ–Ω–µ–µ –≤—Ä–µ–¥–Ω–∞ –¥–ª—è —ç–∫–æ–ª–æ–≥–∏–∏?",
                                  reply_markup=question10_keyboard)


@dp.callback_query(F.data == "answer3_question9_quiz")
async def question9(callback: types.CallbackQuery):
    global id, count, cur, con, count
    result = cur.execute("""SELECT q9 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        count += 1
        await callback.message.answer("‚úÖ–í–µ—Ä–Ω–æ!\n\n")
        cur.execute(f"""UPDATE users SET q9={True} WHERE id = ?""", (id,))
        con.commit()
        con.close()
        await score_for_questions(id)
        con = sqlite3.connect("data/database/information_about_companies.db")
        cur = con.cursor()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    time.sleep(1.5)
    await callback.message.answer("‚ùî–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:\n"
                                  "–ö–∞–∫–∞—è —É–ø–∞–∫–æ–≤–∫–∞ —è–∏—Ü –º–µ–Ω–µ–µ –≤—Ä–µ–¥–Ω–∞ –¥–ª—è —ç–∫–æ–ª–æ–≥–∏–∏?",
                                  reply_markup=question10_keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –¥–µ—Å—è—Ç—ã–π –≤–æ–ø—Ä–æ—Å ------------------------------------
@dp.callback_query(F.data == "answer1_question10_quiz")
async def question10(callback: types.CallbackQuery):
    global id, count, cur, con, count, main_flag
    result = cur.execute("""SELECT q10 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        count += 1
        await callback.message.answer("‚úÖ–í–µ—Ä–Ω–æ!\n\n")
        cur.execute(f"""UPDATE users SET q10={True} WHERE id = ?""", (id,))
        con.commit()
        con.close()
        await score_for_questions(id)
        con = sqlite3.connect("data/database/information_about_companies.db")
        cur = con.cursor()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    time.sleep(1.5)
    await callback.message.answer(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!üéâ –í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Çüéä. –í–∞—à–∏ –±–∞–ª–ª—ã {count}/10\n\n"
                                  "–ù–∞–¥–µ—é—Å—å, –≤—ã —É–∑–Ω–∞–ª–∏ –¥–ª—è —Å–µ–±—è —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µüòÑ")
    if not main_flag:
        await callback.message.answer(f"–í–∞–º –∑–∞—á–∏—Å–ª–µ–Ω–æ {count * 10} –æ–ø—ã—Ç–∞")
        main_flag = False


@dp.callback_query(F.data == "answer2_question10_quiz")
async def question10(callback: types.CallbackQuery):
    global cur, main_flag
    result = cur.execute("""SELECT q10 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –£–ø–∞–∫–æ–≤–∫–∞ –∏–∑ –ø—Ä–µ—Å—Å–æ–≤–∞–Ω–Ω–æ–π –º–∞–∫—É–ª–∞—Ç—É—Ä—ã")
        cur.execute(f"""UPDATE users SET q10={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –£–ø–∞–∫–æ–≤–∫–∞ –∏–∑ –ø—Ä–µ—Å—Å–æ–≤–∞–Ω–Ω–æ–π –º–∞–∫—É–ª–∞—Ç—É—Ä—ã")
    time.sleep(1.5)
    await callback.message.answer(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!üéâ –í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Çüéä. –í–∞—à–∏ –±–∞–ª–ª—ã {count}/10\n\n"
                                  "–ù–∞–¥–µ—é—Å—å, –≤—ã —É–∑–Ω–∞–ª–∏ –¥–ª—è —Å–µ–±—è —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µüòÑ")
    if not main_flag:
        await callback.message.answer(f"–í–∞–º –∑–∞—á–∏—Å–ª–µ–Ω–æ {count * 10} –æ–ø—ã—Ç–∞")
        main_flag = True


@dp.callback_query(F.data == "answer3_question10_quiz")
async def question10(callback: types.CallbackQuery):
    global cur, main_flag
    result = cur.execute("""SELECT q10 FROM users WHERE id = ?""", (id,)).fetchone()[0]
    if not result:
        await callback.message.answer("‚ùå–ù–µ–≤–µ—Ä–Ω–æ!\n\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –£–ø–∞–∫–æ–≤–∫–∞ –∏–∑ –ø—Ä–µ—Å—Å–æ–≤–∞–Ω–Ω–æ–π –º–∞–∫—É–ª–∞—Ç—É—Ä—ã")
        cur.execute(f"""UPDATE users SET q10={True} WHERE id = ?""", (id,)).fetchone()
        con.commit()
    else:
        await callback.message.answer("–í—ã —É–∂–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å!\n"
                                      "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –£–ø–∞–∫–æ–≤–∫–∞ –∏–∑ –ø—Ä–µ—Å—Å–æ–≤–∞–Ω–Ω–æ–π –º–∞–∫—É–ª–∞—Ç—É—Ä—ã")
    time.sleep(1.5)
    await callback.message.answer(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!üéâ –í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Çüéä. –í–∞—à–∏ –±–∞–ª–ª—ã {count}/10\n\n" 
                                  "–ù–∞–¥–µ—é—Å—å, –≤—ã —É–∑–Ω–∞–ª–∏ –¥–ª—è —Å–µ–±—è —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µüòÑ")
    if not main_flag:
        await callback.message.answer(f"–í–∞–º –∑–∞—á–∏—Å–ª–µ–Ω–æ {count * 10} –æ–ø—ã—Ç–∞")
        main_flag = True


async def score_for_questions(id):
    con = sqlite3.connect("data/database/information_about_companies.db")
    cur = con.cursor()
    score = cur.execute(f'''SELECT score FROM users WHERE id = {id}''').fetchone()[0]
    cur.execute(f"""UPDATE users SET score={score + 10 if score else 10} WHERE id={id}""")
    con.commit()
    con.close()
